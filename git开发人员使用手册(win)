git需要一定的学习成本，基本不可能马上上手的，学习可以参考：
博客文档：
http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000
官方文档：
https://git-scm.com/book/zh/v2
重要概念：git是分布式的版本管理器，分布式意味着：远程的代码仓库和本地的代码仓库是同步的、一样的，搞清楚了这点，才能明白git的原理和操作。
分支管理策略
在实际开发中，我们应该按照几个基本原则进行分支管理：
1、git server中每个开发项目有“master”和“dev”两个分支，一般没有“个人分支”（除非要给别人看你的临时代码）；个人电脑上除了“master”和“dev”外，还有“个人分支”。
2、master分支应该是非常稳定的，也就是仅用来发布release新版本，平时不能在上面干活，开发并整合好无BUG的功能模块才能更新到master分支。
3、那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，就是我们传统意义上的debug版本，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本，我们每个人平常在个人分支上做好的小模块就是在dev分支上提交、整合。
4、每个人还要有以自己姓名全拼来命名的个人分支，比如cenxiao分支，我们平常在自己电脑上就是在个人分支上做开发，每天没有写完的代码也是提交保存到本地的个人分支上，完成一个小模块后再提交到dev分支上进行整合。
5、一般开发人员都在dev分支和个人分支上进行开发、整合;dev分支到master分支的整合由项目主管人员来操作。
所以，团队合作的分支看起来就像这样：
 
Windows开发人员手册
Git官方没有图形工具，如果想用命令行去官网下载https://git-scm.com/downloads命令的方法跟linux一样，这里不再做介绍。
如果想用图形界面，可以用第三方的工具，这里我们用sourcetree。
学习git最好从底层的命令学起才能理解，要先学一下《git开发人员使用手册(CentOS)》，对照着里面的命令来理解下面的步骤，否则你应该会看不懂，哈哈。
第一次初始化：
1、安装sourcetree
2、sourcetree要求注册登录atlassian账号，因为是google的服务，注册的时候要翻墙（翻墙可用chrome+lantern）。
3、登陆后从远程仓库克隆项目代码。（URL、账号、密码，要询问项目管理员获取）：
 
4、设置用户名和邮箱，这里跟运行以下两条命令的效果是一样的，要按以下格式要填名字全拼
git config --global user.email "CenXiao@fubo.com"
git config --global user.name "CenXiao"
 
5、系统默认会克隆远程的master分支，我们要切换到dev分支，相当于运行以下命令：
git checkout dev
 
6、然后我们在本地新建并切换到个人分支，相当于运行以下命令：
git branch cenxiao
git checkout cenxiao
 
7、恭喜，可以开始正常的代码开发了
日常开发
1、当你完成了一天的工作，但是又没有把模块的代码写完整，就可以先保存在本地，或者你随时想保存一下当前的项目代码都可以做操作：
将写好的文件提交到本地暂存区，相当于运行了命令：
git add .
 
将暂存区的文件保存到本地个人分支，相当于运行了命令：
git commit -m "修改说明"
 
这里最好搞清楚4个概念：
 
工作区：你在本地看见的、可编辑写代码的地方就是工作区
版本库：可以看做是本地的代码仓库，保存了历史修改记录，可以跟git server同步
暂存区：即上图中的stage，当你运行git add .命令时，就把当前工作区的文件提交到了暂存区
分支：即上图中的dev或个人分支、master分支，跟git server同步的是分支，不是暂存区，当你运行 git commit -m "修改说明"命令时，就把暂存区里的东西保存到了分支里。
2、当你在个人分支上完成了一个模块的开发，可以提交，或者说可以和别人的代码进行整合的时候，就需要把本地的个人分支合并到本地的 dev 分支，再把本地的 dev 分支提交（同步）到服务器的 dev 分支上进行整合了
合并个人分支到dev分支，相当于运行了以下2条命令：
git checkout dev
git merge cenxiao
 
将本地dev分支提交到远程dev分支，相当于运行了命令：
git push origin dev
 
如果发生了冲突，会提示提交失败，这时候则需要将冲突文件在本地合并修改，然后重新提交，相当于运行了命令：
git pull
 
这时候可能出现两种情况：
一、你和别人修改了同一个文件，会提示自动合并失败，不用理，到冲突文件，手动解决冲突：
冲突文件：
冲突解决后的文件：
重新提交到本地dev分支，相当于又运行了命令：
git add .
git commit -m "修改说明"
 
重新提交到远程dev分支，相当于运行了命令：
git push origin dev
 
二、你和别人修改了不同的文件，这时候git pull会帮你自动合并冲突文件，成功后直接重新提交到远程dev分支，相当于运行了命令：
git push origin dev
 
3、某些情况下，当服务器上的dev分支经过了别人的修改，而你想把最新版本的dev分支同步到你本地的dev分支，继续在上面开发的话，则需要进行以下操作（养成习惯每天早上都同步一下本地的dev分支）：
相当于运行以下命令：
git pull
 
这时你如果想要继续在上面开发的话，要删除你的个人分支，再根据最新的dev分支重新建立个人分支（或者把dev分支合并到cenxiao分支都可以）,相当于以下命令：
删除个人分支：git branch -d cenxiao
建立个人分支：git branch cenxiao
切换到个人分支：git checkout cenxiao
 
新建分支图略，上面有。
